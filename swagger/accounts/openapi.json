{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Accounts API",
    "description": "Retrieve Account information",
    "contact": {
      "email": "cibc.api.reference.training@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "http://api.cibc.com/v1"
    }
  ],
  "paths": {
    "/accounts/{id}": {
      "get": {
        "description": "Returns account information matching an account ID",
        "operationId": "findAccountById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of Account to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account record returned matching the submitted Account ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accounts"
                }
              }
            }
          },
          "404": {
            "description": "Transaction has not been found for the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "accounts_auth": [
              "training.accounts.read"
            ]
          }
        ]
      }
    },
    "/accounts": {
      "get": {
        "description": "Returns accounts matching a customer ID",
        "operationId": "findAccountsByCustomerId",
        "parameters": [
          {
            "in": "query",
            "name": "cust_id",
            "description": "Customer Id for which to retrieve the accounts list",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account informatio returned for the matching Customer ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accounts"
                }
              }
            }
          },
          "404": {
            "description": "No transaction data has been found for the account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "accounts_auth": [
              "training.accounts.read"
            ]
          }
        ]
      }
    },
    "/accounts/{id}/transactions": {
      "get": {
        "description": "Returns transaction information matching an account ID",
        "operationId": "findTransactionsByAccountById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of Account to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account record returned matching the submitted Account ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/transactions"
                }
              }
            }
          },
          "404": {
            "description": "Transactions have not been found for the specified Account ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "accounts_auth": [
              "training.accounts.read"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "party_auth": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "http://localhost:8888/oauth2/token",
            "scopes": {
              "training.accounts.read": "read access"
            }
          }
        }
      }
    },
    "schemas": {
      "account": {
        "type": "object",
        "required": [
          "id",
          "customerID",
          "accountType",
          "balance"
        ],
        "properties": {
          "id": {
            "description": "Account ID",
            "type": "string"
          },
          "customerID": {
            "description": "The customer ID identifying the Account holder",
            "type": "string"
          },
          "accountType": {
            "type": "string",
            "description": "The supported account types",
            "enum": [
              "DEPOSIT",
              "SAVINGS",
              "CREDIT",
              "MORTGAGE",
              "LOC"
            ]
          },
          "balance": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "transaction": {
        "type": "object",
        "required": [
          "id",
          "accountID",
          "transactionType",
          "amount"
        ],
        "properties": {
          "id": {
            "description": "Transaction ID",
            "type": "string"
          },
          "accountID": {
            "description": "The Account ID identifying the Account",
            "type": "string"
          },
          "transactionType": {
            "type": "string",
            "description": "The supported transaction types",
            "enum": [
              "DEBIT",
              "CREDIT"
            ]
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "accounts": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/account"
        }
      },
      "transactions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/transaction"
        }
      },
      "error": {
        "type": "object",
        "required": [
          "statusCode",
          "code",
          "message",
          "description"
        ],
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      }
    }
  }
}